<?xml version="1.0" encoding="UTF-8"?>
<server description="new server">

    <!-- Enable features -->
    <featureManager>
        <feature>jakartaee-9.1</feature>
        <feature>microProfile-5.0</feature>
    </featureManager>


    <variable name="default.http.port" defaultValue="9080"/>
    <variable name="default.https.port" defaultValue="9443"/>
    <variable name="app.context.root" defaultValue="/"/>

    <!-- This template enables security. To get the full use of all the capabilities, a keystore and user registry are required. -->

    <!-- For the keystore, default keys are generated and stored in a keystore. To provide the keystore password, generate an 
        encoded password using bin/securityUtility encode and add it below in the password attribute of the keyStore element. 
        Then uncomment the keyStore element. -->
    <!--
    <keyStore password=""/> 
    -->

    <!--For a user registry configuration, configure your user registry. For example, configure a basic user registry using the
        basicRegistry element. Specify your own user name below in the name attribute of the user element. For the password,
        generate an encoded password using bin/securityUtility encode and add it in the password attribute of the user element.
        Then uncomment the user element. -->
    <basicRegistry id="basic" realm="BasicRealm">
        <!--
        <user name="yourUserName" password="" />
        -->
    </basicRegistry>

    <!-- To access this server from a remote client add a host attribute to the following element, e.g. host="*" -->
    <httpEndpoint
      httpPort="${default.http.port}"
      httpsPort="${default.https.port}"
      id="defaultHttpEndpoint"
      host="*" />


    <!-- Automatically expand WAR files and EAR files -->
    <applicationManager autoExpand="true"/>

    <!-- Configures the application on a specified context root -->
    <webApplication  location="camel-um.war" contextRoot="${app.context.root}"/>

    <!-- Default SSL configuration enables trust for default certificates from the Java runtime -->
    <ssl id="defaultSSLConfig" trustDefaultCerts="true" />

    <!--DATA SOURCE - MYSQL-->


    <logging  traceSpecification="eclipselink.sql=all" />

    <library id="jdbcLib">
        <fileset dir="jdbc" includes="*.jar"/>
    </library>

    <dataSource jndiName="jdbc/myDB">
        <jdbcDriver libraryRef="jdbcLib"/>
        <properties
          serverName="localhost"
          portNumber="3306"
          databaseName="xeats"
          user="appuser"
          password="appuser"/>
    </dataSource>


    <!-- JMS CONFIGURATION -->
    <resourceAdapter id="ActiveMQResourceAdapter" location="${server.config.dir}/resources/lib/resource-adapter/activemq-rar-5.16.0.rar">
        <properties.activemq ServerUrl="tcp://localhost:61616" />
    </resourceAdapter>

    <messagingEngine>
        <queue id="jms/MDBQ" />
        <queue id="jms/MDBREPLYQ" />
        <queue id="jms/QUEUE1" />
    </messagingEngine>

    <jmsQueueConnectionFactory jndiName="jms/MDBQ" connectionManagerRef="ConMgr">
        <properties.ActiveMQResourceAdapter />
    </jmsQueueConnectionFactory> -->

    <connectionManager id="ConMgr" maxPoolSize="${jms.ConMgr.maxPoolSize}" />


    <jmsQueue id="jms/MDBREPLYQ" jndiName="jms/MDBREPLYQ">
        <properties.ActiveMQResourceAdapter PhysicalName="MDBREPLYQ" />
    </jmsQueue>
    <jmsQueue id="jms/MDBREPLYQ" jndiName="jms/tMDBREPLYQ">
        <properties.ActiveMQResourceAdapter PhysicalName="jms/MDBREPLYQ" />
    </jmsQueue>
    <jmsQueue id="jms/QUEUE1" jndiName="jms/QUEUE1">
        <properties.ActiveMQResourceAdapter PhysicalName="jms/QUEUE1" />
    </jmsQueue>

    <jmsActivationSpec id="jms/MDBQ">
        <properties.ActiveMQResourceAdapter destinationType="javax.jms.Queue" destination="jms/MDBQ" />
    </jmsActivationSpec>
    <jmsActivationSpec id="jms/MDBREPLYQ">
        <properties.ActiveMQResourceAdapter destinationType="javax.jms.Queue" destination="jms/MDBREPLYQ" />
    </jmsActivationSpec>
    <jmsActivationSpec id="jms/QUEUE1">
        <properties.ActiveMQResourceAdapter destinationType="javax.jms.Queue" destination="jms/QUEUE1" />
    </jmsActivationSpec>
</server>
